{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","document","body","style","background","App","date","Date","toLocaleDateString","useState","query","setQuery","weather","setWeather","window","onload","fetch","then","res","json","result","className","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","console","log","main","name","sys","country","Math","round","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NAEMA,G,MACC,oCADDA,EAEE,2CAGRC,SAASC,KAAKC,MAAMC,WAClB,qDA4DaC,MA3Df,WACE,IAAIC,GAAO,IAAIC,MAAOC,qBADT,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAyBb,OArBAC,OAAOC,OAAS,WACdC,MAAM,GAAD,OAAIhB,EAAJ,iDAAqDA,IACvDiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAAWO,GACXT,EAAS,QAiBb,8BACE,uBAAMU,UAAU,gBAAhB,UACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,QACnCA,MAAOjB,EACPkB,WAvBK,SAACC,GACE,UAAZA,EAAIC,MACNC,QAAQC,IAAR,UACKhC,EADL,qBAC0BU,EAD1B,+BACsDV,IAEtDgB,MAAM,GAAD,OAAIhB,EAAJ,qBAAyBU,EAAzB,+BAAqDV,IACvDiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAAWO,GACXT,EAAS,aAiBc,qBAAjBC,EAAQqB,KACd,gCACE,sBAAKZ,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGT,EAAQsB,KADX,KACmBtB,EAAQuB,IAAIC,WAE/B,qBAAKf,UAAU,OAAf,SAAuBf,OAEzB,sBAAKe,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBgB,KAAKC,MAAM1B,EAAQqB,KAAKM,MAA/C,WACA,sBAAKlB,UAAU,UAAf,UAA0BT,EAAQA,QAAQ,GAAGqB,KAA7C,aAIJ,UCjDKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASkD,eAAe,SAM1BX,M","file":"static/js/main.f0722dcb.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nconst api = {\n  key: \"89634cf0b914a338a1606e2417ed00d3\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\ndocument.body.style.background =\n  \"linear-gradient(45deg, #efefbb, #faaca8) no-repeat\";\nfunction App() {\n  let date = new Date().toLocaleDateString();\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  window.onload = () => {\n    fetch(`${api.base}weather?q=san jose&units=metric&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        setQuery(\"\");\n      });\n  };\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      console.log(\n        `${api.base}weather?q=${query}&units=metric&APPID=${api.key}`\n      );\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n        });\n    }\n  };\n  return (\n    <div>\n      <main className=\"sub-container\">\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          ></input>\n        </div>\n        {typeof weather.main !== \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{date}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n              <div className=\"weather\">{weather.weather[0].main} </div>\n            </div>\n          </div>\n        ) : (\n          \" \"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}